import{escape as t,escapeId as s}from"../DatabaseUtils";import{Expression as i}from"../Expression";import{ColumnType as e}from"../Schema/ColumnType";import{isScalarNullable as o}from"../Types";let n={autoIncrement:!0,unsigned:!0,primaryKey:!0,nullable:!1,default:void 0},p={[e.PK]:n,[e.BIGPK]:n};export class Column{name;type;options;constructor(t,s,e){this.name=t,this.type=s,this.options={default:i.NULL,...p[s]??{},...e??{}}}static create(t,s,i){return new Column(t,s,i)}asCreateSchema(){let e=[s(this.name),this.getTypeSchema()];!0===this.options.unsigned&&e.push("UNSIGNED"),void 0!==this.options.collate&&e.push(`COLLATE ${s(this.options.collate)}`);let n=this.options.default;return!1===this.options.nullable&&(e.push("NOT NULL"),n instanceof i&&"NULL"===n.expression&&(n=void 0)),!0===this.options.invisible&&e.push("INVISIBLE"),void 0!==n&&(o(n)?e.push(`DEFAULT ${t(n)}`):e.push(`DEFAULT ${n.expression}`)),void 0!==this.options.onUpdate&&e.push(`ON UPDATE ${this.options.onUpdate.expression}`),!0===this.options.autoIncrement&&e.push("AUTO_INCREMENT"),void 0!==this.options.comment&&e.push(`COMMENT ${t(this.options.comment)}`),e.join(" ")}getTypeSchema(){switch(this.type){case e.PK:return e.INT;case e.BIGPK:return e.BIGINT;case e.CHAR:case e.VARCHAR:case e.BINARY:case e.VARBINARY:return`${this.type}(${this.options.length??255})`;case e.DECIMAL:{let t=(this.options.precision??10)||10;if(10===t&&void 0===this.options.scale)return this.type;if(10===t)return`${this.type}(10,${this.options.scale})`;return`${this.type}(${t})`}case e.TIME:case e.DATETIME:case e.TIMESTAMP:if(void 0!==this.options.microsecondPrecision)return`${this.type}(${this.options.microsecondPrecision})`;break;case e.BIT:if(void 0!==this.options.bits)return`${this.type}(${this.options.bits})`;break;case e.ENUM:case e.SET:{let s=this.options.options??[""];return`${this.type}(${s.map(s=>t(s)).join(",")})`}}return this.type}}